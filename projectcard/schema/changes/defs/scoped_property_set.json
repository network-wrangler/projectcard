{
    "$schema": "http://json-schema.org/draft-07/schema#",
    "type" : "object",
    "$defs": {
        "set_num": {"type": "number", "minimum": 0},
        "change_num": {"type": "number"},
        "existing_value_conflict": {
          "type":"string",
          "enum":["error","warn","skip"],
          "default":"false",
          "description":"Only used if 'existing' provided in project card and `existing` doesn't match the existing network value. One of `error`, `warn`, or `skip`. `error` will raise an error, `warn` will warn the user, and `skip` will skip the change for that property (note it will still apply any remaining property changes). Will overwrite any WranglerConfig."
        },
        "overwrite_scoped": {
          "type":"string",
          "enum":["all","conflicting","false"],
          "default":"false",
          "description":"If 'all', all scoped items will be overwritten. If 'conflicting', only conflicting scoped items will be overwritten. If 'none', no scoped items will be overwritten and error will be raised if there are conflicts."
        },
        "scoped_property_set_item":{
            "type": "object",
            "examples": [
              {"timespan":["7:00","9:00"],"set":0.50}
            ],
            "oneOf": [
              {
                "required": ["timespan","set"]
              },
              {
                "required": ["timespan","change"]
              },
              {
                "required": ["category","change"]
              },
              {
                "required": ["category","set"]
              }
            ],
            "properties":{
              "set": {"$ref": "#/$defs/set_num"},
              "change": {"$ref": "#/$defs/change_num"},
              "category": {"type":"array"},
              "timespan": {"$ref": "../../defs/timespan.json"},
              "overwrite_scoped": {"$ref": "#/$defs/overwrite_scoped"},
              "existing_value_conflict": {"$ref": "#/$defs/existing_value_conflict"}
              }
          }
    },
    "oneOf": [
      {
        "required": ["set","scoped"],
        "not": {"required": ["change"]}
      },
      {
        "required": ["change","group"],
        "not": {"required": ["set"]}
      }
    ],
    "properties" : {
        "existing" : {"type": ["number", "string"]},
        "set" : {"$ref": "#/$defs/set_num"},
        "change" : {"$ref": "#/$defs/change_num"},
        "scoped" : {"type":"array","items": {"$ref": "#/$defs/scoped_property_set_item"}},
        "overwrite_scoped": {"$ref": "#/$defs/overwrite_scoped"}
    }
}
